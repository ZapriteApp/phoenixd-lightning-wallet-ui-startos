id: phoenixd-lightning-wallet-ui
title: "Phoenixd Lightning Wallet UI"
version: 0.1.2
release-notes: |
  - Mvp release
  - Send & Receive functionality for BOLT11 and BOLT12 
  - Add and pay contacts
  - View transactions history table
license: MIT
wrapper-repo: "https://github.com/hkarani/phoenixd-lightning-wallet-ui-startos"
upstream-repo: "https://github.com/hkarani/phoenixd-lightning-wallet-ui.git"
donation-url: "https://pay.zaprite.com/pl_WzwH6KkHKn"
support-site: "https://github.com/ZapriteApp/phoenix-server-wallet/issues/new"
marketing-site: "https://zaprite.com/"
build: ["make"]
description:
  short: Phoenixd-wallet-UI
  long: |
    A lightning wallet UI for Phoenix Server (phoenixd)
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md

main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root/.phoenix
    dbjson: /usr/src/app/dbjson
  gpu-acceleration: false
# Defines what architectures will be supported by the service. This service supports x86_64 and aarch64 architectures.
hardware-requirements:
  arch:
    - x86_64
    - aarch64
# This is where health checks would be defined - see a more advanced example in https://github.com/Start9Labs/start9-pages-startos
health-checks:
  web-ui:
    name: Wallet Interface
    success-message: The wallet UI is ready to be visited in your browser
    type: docker
    image: main
    entrypoint: check-ui.sh
    args: []
    io-format: json
    inject: true

  phoenixd:
    name: Phoenixd Daemon
    success-message: Phoenixd is running and connected to a lightning peer
    type: docker
    image: main
    entrypoint: check-phoenixd.sh
    args: []
    io-format: json
    inject: true
config: ~
properties: ~
#  type: script
volumes:
  main:
    type: data
  dbjson:
    type: data
alerts:
  install: 
    <p>Phoenixd Lightning Wallet UI is a self-hosted wallet running on top of a Phoenix Server lightning node. No third party exists to backup your wallet seed or data, so you are fully responsible for securing funds and backing up your wallet information.</p>

    <p>The wallet seed generated during the initial setup is critical for recovering your wallet in case of anything. Please back up your seed securely IMMEDIATELY after installing the wallet.</p>

    <p><b>PLEASE READ</b> the <b>INSTRUCTIONS</b> after installation!</p>

  uninstall: 
    <p><b>READ CAREFULLY!</b></p>
    
    <p>Uninstalling Phoenixd-lightning-wallet will result in permanent loss of access to your valuable bitcoin or contacts you created. The only way to ensure data is not lost is to back up your wallet seed to recover your funds.</p>
    
  restore: 
    <p>Restoring Phoenixd-lightning-wallet will overwrite its current data.</p>
    
    <p>Any data created since the last backup will not be recognized.</p>

interfaces:
  main:
    # A human readable name for display in the UI
    name: Phoeinixd wallet UI
    description: Wallet UI for phoenixd
    tor-config:
    # Port mappings are from the external port to the internal container port
      port-mapping:
        80: "3000"
    # Port mappings are from the external port to the internal container port
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
dependencies:
  phoenixd:
    id: phoenixd
    version: ^0.3.3
    description: "Phoenix Server for Lightning Network interactions"
    requirement:
      type: "opt-in"
      how: Optionally use Phoenixd already running on your start9.
      description: Used to a the main service.
backup:
  create:
    type: docker
    image: compat 
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/.phoenix
      - /usr/src/app/dbjson 
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/.phoenix"
      dbjson: "/usr/src/app/dbjson"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/.phoenix
      - /usr/src/app/dbjson
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/.phoenix"
      dbjson: "/usr/src/app/dbjson"